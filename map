#include <iostream>
#include <vector>
#include <list>
#include <deque>
#include <map>

class Player
{
public:
    Player() : _playerId(0) {}
    Player(int playerId) : _playerId(playerId) {}
public:
    int _playerId;
};

using namespace std;

int main()
{
    // map : 균현 이진 트리(AVL)
    // 노드 기반

    map <int, int> m;
    // 10만명
    for (int i = 0; i < 100000; i++)
    {
        m.insert(pair<int ,int> (i, i * 100));
    }
    // 5만명
    for (int i = 0; i < 50000; i++)
    {
        int randomValue = rand() % 50000;
        m.erase(randomValue);
    }
    // Q) ID = 1만인 Player 찾고 싶다!
    // A) 매우 빠르게 찾을 수 있다.
    map<int, int> :: iterator findIt = m.find(10000);
    // map 순회
    for (map<int, int> ::iterator it = m.begin(); it != m.end(); ++it)
    {
        pair<const int,int>& p = (*it);
        cout << it -> first << endl;
    }
    // 넣고   (insert, [])
    // 빼고   (erase)
    // 찾고   (find, [])
    // 반복자 (map :: iterator) (*it) pair<key,value>&
    return 0;
}

